<?xml version="1.0" encoding="UTF-8"?>

<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec"
               xmlns:functx="http://www.functx.com"
	       xmlns="http://www.w3.org/1999/xhtml"
	       xmlns:h="http://www.w3.org/1999/xhtml"
               stylesheet="../htmlbook.xsl">

  <x:param name="book-language" select="'en'"/>
  
  <!-- Use the following global label-generation params for testing of h1-h6 processing in the
       heading-processing section below -->
  <x:param name="label.numeration.by.data-type">
appendix:A
chapter:1
part:I
sect1:1
sect2:1
sect3:1
sect4:1
sect5:1
  </x:param>

  <!-- Test suite for elements.xsl -->

  <!-- id generation tests -->
  <x:scenario label="When encountering a section without an id">
    <x:context>
      <section/>
    </x:context>
    <!-- check the result -->
    <x:expect label="Add an id" test="h:section[1]/@id != ''"/>
  </x:scenario>

  <x:scenario label="When encountering a section with an id">
    <x:context>
      <section id="cookies"/>
    </x:context>
    <!-- check the result -->
    <x:expect label="Preserve the id" test="h:section[1]/@id = 'cookies'"/>
  </x:scenario>

  <x:scenario label="When encountering a Part div without an id">
    <x:context>
      <div data-type="part"/>
    </x:context>
    <!-- check the result -->
    <x:expect label="Add an id" test="h:div[@data-type='part'][1]/@id != ''"/>
  </x:scenario>

  <x:scenario label="When encountering a Part div with an id">
    <x:context>
      <div data-type="part" id="pizza"/>
    </x:context>
    <!-- check the result -->
    <x:expect label="Preserve the id" test="h:div[@data-type='part'][1]/@id = 'pizza'"/>
  </x:scenario>

  <x:scenario label="When encountering an aside without an id">
    <x:context>
      <aside/>
    </x:context>
    <!-- check the result -->
    <x:expect label="Add an id" test="h:aside[1]/@id != ''"/>
  </x:scenario>

  <x:scenario label="When encountering an aside with an id">
    <x:context>
      <aside id="watermelon"/>
    </x:context>
    <!-- check the result -->
    <x:expect label="Preserve the id" test="h:aside[1]/@id = 'watermelon'"/>
  </x:scenario>

  <!-- Indexterm tests -->
  <x:scenario label="When encountering an indexterm without an id">
    <x:context>
      <a data-type="indexterm" data-primary="rubygems"/>
    </x:context>
    <!-- check the result -->
    <x:expect label="Add an id" test="h:a[@data-type='indexterm'][1]/@id != ''"/>
  </x:scenario>

  <x:scenario label="When encountering an indexterm with an id">
    <x:context>
      <a data-type="indexterm" data-primary="rubygems" id="avocado"/>
    </x:context>
    <!-- check the result -->
    <x:expect label="Preserve the id" test="h:a[@data-type='indexterm'][1]/@id = 'avocado'"/>
  </x:scenario>

  <x:scenario label="When encountering an indexterm that contains only whitespace">
    <x:context>
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and">   </a>
    </x:context>
    <x:expect label="Strip the whitespace">
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and" id="..."/>
    </x:expect>
  </x:scenario>

  <x:scenario label="When encountering an indexterm that contains only whitespace (including nbsp)">
    <x:context>
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and">&#xa0; &#xa0;</a>
    </x:context>
    <x:expect label="Strip the whitespace">
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and" id="..."/>
    </x:expect>
  </x:scenario>

  <x:scenario label="When encountering an indexterm that contains text and whitespace">
    <x:context>
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and">Unicode&#xa0; &#xa0;is fun</a>
    </x:context>
    <x:expect label="Preserve content as is">
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and" id="...">Unicode&#xa0; &#xa0;is fun</a>
    </x:expect>
  </x:scenario>

  <x:scenario label="When encountering an indexterm that contains child nodes only">
    <x:context>
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and"><em>Unicode</em></a>
    </x:context>
    <x:expect label="Preserve content as is">
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and" id="..."><em>Unicode</em></a>
    </x:expect>
  </x:scenario>

  <x:scenario label="When encountering an indexterm that contains child nodes only (2)">
    <x:context>
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and"><br/></a>
    </x:context>
    <x:expect label="Preserve content as is">
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and" id="..."><br/></a>
    </x:expect>
  </x:scenario>

  <x:scenario label="When encountering an indexterm that contains child nodes and text">
    <x:context>
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and"><em>123</em>456</a>
    </x:context>
    <x:expect label="Preserve content as is">
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and" id="..."><em>123</em>456</a>
    </x:expect>
  </x:scenario>

  <x:scenario label="When encountering an indexterm that contains child nodes, text, and whitespace">
    <x:context>
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and"><em>Unicode</em>&#xa0; &#xa0;is fun</a>
    </x:context>
    <x:expect label="Preserve content as is">
      <a data-type="indexterm" data-primary="xslt" data-secondary="xml and" id="..."><em>Unicode</em>&#xa0; &#xa0;is fun</a>
    </x:expect>
  </x:scenario>

  <!-- PDF bookmark attributes -->
  <x:scenario label="When encountering a chapter-level section">
    <x:context>
      <section data-type="chapter">
	<h1>This is the Chapter title</h1>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h1)])"/>
  </x:scenario>

  <x:scenario label="When encountering a chapter-level section with heading in a header element">
    <x:context>
      <section data-type="chapter">
	<header>
	  <h1>This is the Chapter title</h1>
	</header>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h1)])"/>
  </x:scenario>

  <x:scenario label="When a chapter-level section already has a PDF bookmark">
    <x:context>
      <section data-type="chapter" data-pdf-bookmark="Custom Bookmark">
	<h1>This is the Chapter title</h1>
	<p>Hello World!</p>
      </section>
    </x:context>
    <x:expect label="Don't change the data-pdf-bookmark value" test="/h:section/@data-pdf-bookmark = 'Custom Bookmark'"/>
  </x:scenario>

  <x:scenario label="When encountering a sect1-level section">
    <x:context>
      <section data-type="sect1">
	<h1>This is the Section title</h1>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h1)])"/>
  </x:scenario>

  <x:scenario label="When encountering a sect1-level section with heading in a header element">
    <x:context>
      <section data-type="sect1">
	<header>
	  <h1>This is the Section title</h1>
	</header>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h1)])"/>
  </x:scenario>

  <x:scenario label="When a sect1-level section already has a PDF bookmark">
    <x:context>
      <section data-type="sect1" data-pdf-bookmark="Custom Bookmark">
	<h1>This is the Section title</h1>
	<p>Hello World!</p>
      </section>
    </x:context>
    <x:expect label="Don't change the data-pdf-bookmark value" test="/h:section/@data-pdf-bookmark = 'Custom Bookmark'"/>
  </x:scenario>

  <x:scenario label="When encountering a sect2-level section">
    <x:context>
      <section data-type="sect2">
	<h2>This is the Section title</h2>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h2)])"/>
  </x:scenario>

  <x:scenario label="When encountering a sect2-level section with heading in a header element">
    <x:context>
      <section data-type="sect2">
	<header>
	  <h2>This is the Section title</h2>
	</header>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h2)])"/>
  </x:scenario>

  <x:scenario label="When a sect2-level section already has a PDF bookmark">
    <x:context>
      <section data-type="sect2" data-pdf-bookmark="Custom Bookmark">
	<h1>This is the Section title</h1>
	<p>Hello World!</p>
      </section>
    </x:context>
    <x:expect label="Don't change the data-pdf-bookmark value" test="/h:section/@data-pdf-bookmark = 'Custom Bookmark'"/>
  </x:scenario>

  <x:scenario label="When encountering a sect3-level section">
    <x:context>
      <section data-type="sect3">
	<h3>This is the Section title</h3>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h3)])"/>
  </x:scenario>

  <x:scenario label="When encountering a sect3-level section with heading in a header element">
    <x:context>
      <section data-type="sect3">
	<header>
	  <h3>This is the Section title</h3>
	</header>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h3)])"/>
  </x:scenario>

  <x:scenario label="When a sect3-level section already has a PDF bookmark">
    <x:context>
      <section data-type="sect3" data-pdf-bookmark="Custom Bookmark">
	<h1>This is the Section title</h1>
	<p>Hello World!</p>
      </section>
    </x:context>
    <x:expect label="Don't change the data-pdf-bookmark value" test="/h:section/@data-pdf-bookmark = 'Custom Bookmark'"/>
  </x:scenario>

  <x:scenario label="When encountering a sect4-level section">
    <x:context>
      <section data-type="sect4">
	<h4>This is the Section title</h4>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h4)])"/>
  </x:scenario>

  <x:scenario label="When encountering a sect4-level section with heading in a header element">
    <x:context>
      <section data-type="sect4">
	<header>
	  <h4>This is the Section title</h4>
	</header>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h4)])"/>
  </x:scenario>

  <x:scenario label="When a sect4-level section already has a PDF bookmark">
    <x:context>
      <section data-type="sect4" data-pdf-bookmark="Custom Bookmark">
	<h1>This is the Section title</h1>
	<p>Hello World!</p>
      </section>
    </x:context>
    <x:expect label="Don't change the data-pdf-bookmark value" test="/h:section/@data-pdf-bookmark = 'Custom Bookmark'"/>
  </x:scenario>

  <x:scenario label="When encountering a sect5-level section">
    <x:context>
      <section data-type="sect5">
	<h5>This is the Section title</h5>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h5)])"/>
  </x:scenario>

  <x:scenario label="When encountering a sect5-level section with heading in a header element">
    <x:context>
      <section data-type="sect5">
	<header>
	  <h5>This is the Section title</h5>
	</header>
	<p>Hello World!</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:section[1]/@data-pdf-bookmark[contains(., current()//h:h5)])"/>
  </x:scenario>

  <x:scenario label="When a sect5-level section already has a PDF bookmark">
    <x:context>
      <section data-type="sect5" data-pdf-bookmark="Custom Bookmark">
	<header>
	  <h5>This is the Section title</h5>
	</header>
	<p>Hello World!</p>
      </section>
    </x:context>
    <x:expect label="Don't change the data-pdf-bookmark value" test="/h:section/@data-pdf-bookmark = 'Custom Bookmark'"/>
  </x:scenario>

  <x:scenario label="When encountering a Part div">
    <x:context>
      <div data-type="part">
	<h1>This is the Part title</h1>
	<p>Hello World!</p>
      </div>
    </x:context>
    <!-- check the result -->
    <x:expect label="Propagate the heading text to a data-pdf-bookmark attribute" test="exists(h:div[1]/@data-pdf-bookmark[contains(., current()//h:h1)])"/>
  </x:scenario>

  <x:scenario label="When a Part already has a PDF bookmark">
    <x:context>
      <div data-type="part" data-pdf-bookmark="Custom Bookmark">
	<h1>This is the Part title</h1>
	<p>Hello World!</p>
      </div>
    </x:context>
    <x:expect label="Don't change the data-pdf-bookmark value" test="/h:div/@data-pdf-bookmark = 'Custom Bookmark'"/>
  </x:scenario>

  <x:scenario label="When encountering a headingless section/div"> <!-- Not valid HTMLBook -->
    <x:context>
      <div data-type="part">
	<p>Hello World!</p>
	<section data-type="chapter">
	  <p>Hi again, World!</p>
	</section>
      </div>
    </x:context>
    <!-- check the result -->
    <x:expect label="Don't generate a data-pdf-bookmark attribute" test="count(//@data-pdf-bookmark) = 0"/>
  </x:scenario>

  <!-- HEADING PROCESSING TESTS -->

  <!-- Part -->
  <x:scenario label="When encountering a heading element (h1-h5) in a Part (loose h1)">
    <x:context select="(//h:h1)[1]">
      <div data-type="part">
	<h1>This is the heading</h1>
	<p>Text Text Text!</p>
      </div>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h1><span class="label">Part I. </span>This is the heading</h1>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h1>This is the heading</h1>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When encountering a heading element (h1-h5) in a Part (header block)">
    <x:context select="(//h:h1)[1]">
      <div data-type="part">
	<header>
	  <h1>This is the heading</h1>
	  <p data-type="subtitle">Subtitle should always be left untouched</p>
	</header>
	<p>Text Text Text!</p>
      </div>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h1><span class="label">Part I. </span>This is the heading</h1>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned on (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h1>This is the heading</h1>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <!-- Top-level (chapter) -->
  <x:scenario label="When encountering a heading element (h1-h5) in a top level-section (loose h1)">
    <x:context select="(//h:h1)[1]">
      <section data-type="chapter">
	<h1>This is the heading</h1>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h1><span class="label">Chapter 1. </span>This is the heading</h1>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h1>This is the heading</h1>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When encountering a heading element (h1-h5) in a top level-section (header block)">
    <x:context select="(//h:h1)[1]">
      <section data-type="chapter">
	<header>
	  <h1>This is the heading</h1>
	  <p data-type="subtitle">Subtitle should always be left untouched</p>
	</header>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h1><span class="label">Chapter 1. </span>This is the heading</h1>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned on (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h1>This is the heading</h1>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <!-- Sect2 -->

  <x:scenario label="When encountering a heading element (h1-h5) in a sect2 (loose h2)">
    <x:context select="(//h:h2)[1]">
      <section data-type="sect2">
	<h2>This is the heading</h2>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h2><span class="label">Section 1. </span>This is the heading</h2>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h2>This is the heading</h2>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When encountering a heading element (h1-h5) in a sect2 (header block)">
    <x:context select="(//h:h2)[1]">
      <section data-type="sect2">
	<header>
	  <h2>This is the heading</h2>
	  <p data-type="subtitle">Subtitle should always be left untouched</p>
	</header>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h2><span class="label">Section 1. </span>This is the heading</h2>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned on (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h2>This is the heading</h2>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <!-- Sect3 -->
  <x:scenario label="When encountering a heading element (h1-h5) in a sect3 (loose h3)">
    <x:context select="(//h:h3)[1]">
      <section data-type="sect3">
	<h3>This is the heading</h3>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h3><span class="label">Section 1. </span>This is the heading</h3>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h3>This is the heading</h3>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When encountering a heading element (h1-h5) in a sect3 (header block)">
    <x:context select="(//h:h3)[1]">
      <section data-type="sect3">
	<header>
	  <h3>This is the heading</h3>
	  <p data-type="subtitle">Subtitle should always be left untouched</p>
	</header>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h3><span class="label">Section 1. </span>This is the heading</h3>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned on (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h3>This is the heading</h3>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <!-- Sect4 -->
  <x:scenario label="When encountering a heading element (h1-h5) in a sect4 (loose h4)">
    <x:context select="(//h:h4)[1]">
      <section data-type="sect4">
	<h4>This is the heading</h4>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h4><span class="label">Section 1. </span>This is the heading</h4>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h4>This is the heading</h4>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When encountering a heading element (h1-h5) in a sect4 (header block)">
    <x:context select="(//h:h4)[1]">
      <section data-type="sect4">
	<header>
	  <h4>This is the heading</h4>
	  <p data-type="subtitle">Subtitle should always be left untouched</p>
	</header>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h4><span class="label">Section 1. </span>This is the heading</h4>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned on (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h4>This is the heading</h4>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <!-- Sect5 -->
  <x:scenario label="When encountering a heading element (h1-h5) in a sect5 (loose h5)">
    <x:context select="(//h:h5)[1]">
      <section data-type="sect5">
	<h5>This is the heading</h5>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h5><span class="label">Section 1. </span>This is the heading</h5>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h5>This is the heading</h5>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When encountering a heading element (h1-h5) in a sect5 (header block)">
    <x:context select="(//h:h5)[1]">
      <section data-type="sect5">
	<header>
	  <h5>This is the heading</h5>
	  <p data-type="subtitle">Subtitle should always be left untouched</p>
	</header>
	<p>Text Text Text!</p>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h5><span class="label">Section 1. </span>This is the heading</h5>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned on (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h5>This is the heading</h5>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off (subtitle handling)">
      <x:context select="(//h:p[@data-type='subtitle'])[1]">
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Subtitle should be preserved as is">
	<p data-type="subtitle">Subtitle should always be left untouched</p>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <!-- headings in divs -->
  <x:scenario label="When encountering a heading element (h1-h5) in a div">
    <x:context select="(//h:h5)[1]">
      <section data-type="chapter">
	<h1>Chapter heading</h1>
	<div data-type="example">
	  <h5>This is the example heading</h5>
	  <pre data-type="programlisting">print "I'm an awesome Python coder"</pre>
	</div>
      </section>
    </x:context>

    <x:scenario label="With autogenerate.labels turned on">
      <x:context>
	<x:param name="autogenerate.labels" select="1"/>
      </x:context>
      <x:expect label="Proper label should be prepended">
	<h5><span class="label">Example 1-1. </span>This is the example heading</h5>
      </x:expect>
    </x:scenario>

    <x:scenario label="With autogenerate.labels turned off">
      <x:context>
	<x:param name="autogenerate.labels" select="0"/>
      </x:context>
      <x:expect label="Content should be preserved as is">
	<h5>This is the example heading</h5>
      </x:expect>
    </x:scenario>
  </x:scenario>
  
  <!-- Admonition tests (heading handling) -->
  <x:scenario label="When matching an titleless admonition (note)">
    <x:context>
      <div data-type="note">
        <p>This is a note.</p>
      </div>
    </x:context>
    <x:scenario label="With add.title.heading.for.admonitions turned off">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="0"/>
      </x:context>
      <x:expect label="No admonition heading should be added">
        <div data-type="note">
          <p>This is a note.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With add.title.heading.for.admonitions turned on">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="note">
          <h6>Note</h6>
          <p>This is a note.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario pending="No clean way to parameterize language at template level for unit tests yet" label="With add.title.heading.for.admonitions turned on (es language localization)">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="note">
          <h6>Nota</h6>
          <p>This is a note.</p>
        </div>
      </x:expect>
    </x:scenario>
  </x:scenario>
    
    <x:scenario label="When matching an titleless admonition (tip)">
      <x:context>
        <div data-type="tip">
          <p>This is a tip.</p>
        </div>
      </x:context>
      <x:scenario label="With add.title.heading.for.admonitions turned off">
        <x:context>
          <x:param name="add.title.heading.for.admonitions" select="0"/>
        </x:context>
        <x:expect label="No admonition heading should be added">
          <div data-type="tip">
            <p>This is a tip.</p>
          </div>
        </x:expect>
      </x:scenario>
      
      <x:scenario label="With add.title.heading.for.admonitions turned on">
        <x:context>
          <x:param name="add.title.heading.for.admonitions" select="1"/>
        </x:context>
        <x:expect label="An admonition heading should be added">
          <div data-type="tip">
            <h6>Tip</h6>
            <p>This is a tip.</p>
          </div>
        </x:expect>
      </x:scenario>
  </x:scenario>
  
  <x:scenario label="When matching an titleless admonition (warning)">
    <x:context>
      <div data-type="warning">
        <p>This is a warning.</p>
      </div>
    </x:context>
    <x:scenario label="With add.title.heading.for.admonitions turned off">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="0"/>
      </x:context>
      <x:expect label="No admonition heading should be added">
        <div data-type="warning">
          <p>This is a warning.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With add.title.heading.for.admonitions turned on">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="warning">
          <h6>Warning</h6>
          <p>This is a warning.</p>
        </div>
      </x:expect>
    </x:scenario>
  </x:scenario>
  
  <x:scenario label="When matching an titleless admonition (caution)">
    <x:context>
      <div data-type="caution">
        <p>This is a caution.</p>
      </div>
    </x:context>
    <x:scenario label="With add.title.heading.for.admonitions turned off">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="0"/>
      </x:context>
      <x:expect label="No admonition heading should be added">
        <div data-type="caution">
          <p>This is a caution.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With add.title.heading.for.admonitions turned on">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="caution">
          <h6>Caution</h6>
          <p>This is a caution.</p>
        </div>
      </x:expect>
    </x:scenario>
  </x:scenario>
  
  <x:scenario label="When matching an titleless admonition (important)">
    <x:context>
      <div data-type="important">
        <p>This is an important admonition.</p>
      </div>
    </x:context>
    <x:scenario label="With add.title.heading.for.admonitions turned off">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="0"/>
      </x:context>
      <x:expect label="No admonition heading should be added">
        <div data-type="important">
          <p>This is an important admonition.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With add.title.heading.for.admonitions turned on">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="important">
          <h6>Important</h6>
          <p>This is an important admonition.</p>
        </div>
      </x:expect>
    </x:scenario>
  </x:scenario>
  
  <x:scenario label="When matching an titled admonition (note)">
    <x:context>
      <div data-type="note">
        <h6>Note Heading</h6>
        <p>This is a note.</p>
      </div>
    </x:context>
    <x:scenario label="With add.title.heading.for.admonitions turned off">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="0"/>
      </x:context>
      <x:expect label="No additional admonition heading should be added">
        <div data-type="note">
          <h6>Note Heading</h6>
          <p>This is a note.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With add.title.heading.for.admonitions turned on">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="note">
          <h6>Note Heading</h6>
          <p>This is a note.</p>
        </div>
      </x:expect>
    </x:scenario>
  </x:scenario>
  
  <x:scenario label="When matching an titled admonition (tip)">
    <x:context>
      <div data-type="tip">
        <h6>Tip Heading</h6>
        <p>This is a tip.</p>
      </div>
    </x:context>
    <x:scenario label="With add.title.heading.for.admonitions turned off">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="0"/>
      </x:context>
      <x:expect label="No admonition heading should be added">
        <div data-type="tip">
          <h6>Tip Heading</h6>
          <p>This is a tip.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With add.title.heading.for.admonitions turned on">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="tip">
          <h6>Tip Heading</h6>
          <p>This is a tip.</p>
        </div>
      </x:expect>
    </x:scenario>
  </x:scenario>
  
  <x:scenario label="When matching an titled admonition (warning)">
    <x:context>
      <div data-type="warning">
        <h6>Warning Heading</h6>
        <p>This is a warning.</p>
      </div>
    </x:context>
    <x:scenario label="With add.title.heading.for.admonitions turned off">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="0"/>
      </x:context>
      <x:expect label="No admonition heading should be added">
        <div data-type="warning">
          <h6>Warning Heading</h6>
          <p>This is a warning.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With add.title.heading.for.admonitions turned on">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="warning">
          <h6>Warning Heading</h6>
          <p>This is a warning.</p>
        </div>
      </x:expect>
    </x:scenario>
  </x:scenario>
  
  <x:scenario label="When matching an titled admonition (caution)">
    <x:context>
      <div data-type="caution">
        <h6>Caution Heading</h6>
        <p>This is a caution.</p>
      </div>
    </x:context>
    <x:scenario label="With add.title.heading.for.admonitions turned off">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="0"/>
      </x:context>
      <x:expect label="No admonition heading should be added">
        <div data-type="caution">
          <h6>Caution Heading</h6>
          <p>This is a caution.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With add.title.heading.for.admonitions turned on">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="caution">
          <h6>Caution Heading</h6>
          <p>This is a caution.</p>
        </div>
      </x:expect>
    </x:scenario>
  </x:scenario>
  
  <x:scenario label="When matching an titleless admonition (important)">
    <x:context>
      <div data-type="important">
        <h6>Important Heading</h6>
        <p>This is an important admonition.</p>
      </div>
    </x:context>
    <x:scenario label="With add.title.heading.for.admonitions turned off">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="0"/>
      </x:context>
      <x:expect label="No admonition heading should be added">
        <div data-type="important">
          <h6>Important Heading</h6>
          <p>This is an important admonition.</p>
        </div>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With add.title.heading.for.admonitions turned on">
      <x:context>
        <x:param name="add.title.heading.for.admonitions" select="1"/>
      </x:context>
      <x:expect label="An admonition heading should be added">
        <div data-type="important">
          <h6>Important Heading</h6>
          <p>This is an important admonition.</p>
        </div>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <!-- HTML4 structural elements test -->
  <x:scenario label="When matching any 'section'">
    <x:context>
      <section data-type="chapter" id="chapterid">
	<h1>Chapter heading</h1>
	<p>This happens to be a chapter</p>
      </section>
    </x:context>

    <x:scenario label="With html4.structural.elements turned off">
      <x:context>
        <x:param name="html4.structural.elements" select="0"/>
      </x:context>
      <x:expect label="Element tagging and attributes should be preserved as is">
	<section data-type="chapter" id="chapterid" data-pdf-bookmark="...">
	  <h1>Chapter heading</h1>
	  <p>This happens to be a chapter</p>
	</section>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With html4.structural.elements turned on">
      <x:context>
        <x:param name="html4.structural.elements" select="1"/>
      </x:context>
      <x:expect label="An additional div for backward compatibility should be added, and id should be moved to div">
	<section data-type="chapter" data-pdf-bookmark="...">
	  <div class="chapter" id="chapterid">...</div>
	</section>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When matching any Index 'section'">
    <x:context>
      <section data-type="index" id="indexid">
	<h1>Index heading</h1>
	<p>There should hopefully be some index entries to follow</p>
      </section>
    </x:context>

    <x:scenario label="With html4.structural.elements turned off">
      <x:context>
        <x:param name="html4.structural.elements" select="0"/>
      </x:context>
      <x:expect label="Element tagging and attributes should be preserved as is">
	<section data-type="index" id="indexid">
	  <h1>Index heading</h1>
	  <p>There should hopefully be some index entries to follow</p>
	</section>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With html4.structural.elements turned on">
      <x:context>
        <x:param name="html4.structural.elements" select="1"/>
      </x:context>
      <x:expect label="An additional div for backward compatibility should be added, and id should be moved to div">
	<section data-type="index">
	  <div class="index" id="indexid">...</div>
	</section>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When matching any captioned 'figure'">
    <x:context>
      <figure id="figureid">
	<figcaption>Figure heading</figcaption>
	<img src="taco.png"/>
      </figure>
    </x:context>

    <x:scenario label="With figure.border.div disabled">
      <x:context>
	<x:param name="figure.border.div" select="0"/>
      </x:context>
      <x:expect label="No border-box div should be generated" test="not(exists(//h:div[@class='border-box']))"/>
    </x:scenario>

    <x:scenario label="With figure.border.div enabled">
      <x:context>
	<x:param name="figure.border.div" select="1"/>
      </x:context>
      <x:expect label="A border-box div should be generated">
	<figure id="figureid">
	  <figcaption>Figure heading</figcaption>
	  <div class="border-box">
	    <img src="taco.png"/>
	  </div>
	</figure>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When matching any uncaptioned 'figure' (no figcaption)">
    <x:context>
      <figure id="figureid">
	<img src="pizza.png"/>
      </figure>
    </x:context>

    <x:scenario label="With figure.border.div disabled">
      <x:context>
	<x:param name="figure.border.div" select="0"/>
      </x:context>
      <x:expect label="No border-box div should be generated" test="not(exists(//h:div[@class='border-box']))"/>
    </x:scenario>

    <x:scenario label="With figure.border.div enabled">
      <x:context>
	<x:param name="figure.border.div" select="1"/>
      </x:context>
      <x:expect label="No border-box div should be generated" test="not(exists(//h:div[@class='border-box']))"/>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When matching any uncaptioned 'figure' (empty figcaption)">
    <x:context>
      <figure id="figureid">
	<figcaption/>
	<img src="knish.png"/>
      </figure>
    </x:context>

    <x:scenario label="With figure.border.div disabled">
      <x:context>
	<x:param name="figure.border.div" select="0"/>
      </x:context>
      <x:expect label="No border-box div should be generated" test="not(exists(//h:div[@class='border-box']))"/>
    </x:scenario>

    <x:scenario label="With figure.border.div enabled">
      <x:context>
	<x:param name="figure.border.div" select="1"/>
      </x:context>
      <x:expect label="No border-box div should be generated" test="not(exists(//h:div[@class='border-box']))"/>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When matching any 'figure'">
    <x:context>
      <figure id="figureid">
	<figcaption>Figure heading</figcaption>
	<img src="burrito.png"/>
      </figure>
    </x:context>

    <x:scenario label="With html4.structural.elements turned off">
      <x:context>
        <x:param name="html4.structural.elements" select="0"/>
      </x:context>
      <x:expect label="Element tagging and attributes should be preserved as is">
	<figure id="figureid">
	  <figcaption>Figure heading</figcaption>
	  <img src="burrito.png"/>
	</figure>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With html4.structural.elements turned on">
      <x:context>
        <x:param name="html4.structural.elements" select="1"/>
      </x:context>
      <x:expect label="An additional div for backward compatibility should be added, and id should be moved to div">
	<figure>
	  <div class="figure" id="figureid">...</div>
	</figure>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When matching any 'aside'">
    <x:context>
      <aside data-type="sidebar" id="sidebarid">
	<h5>Sidebar heading</h5>
	<p>This happens to be a sidebar</p>
      </aside>
    </x:context>

    <x:scenario label="With html4.structural.elements turned off">
      <x:context>
        <x:param name="html4.structural.elements" select="0"/>
      </x:context>
      <x:expect label="Element tagging and attributes should be preserved as is">
	<aside data-type="sidebar" id="sidebarid">
	  <h5>Sidebar heading</h5>
	  <p>This happens to be a sidebar</p>
	</aside>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With html4.structural.elements turned on">
      <x:context>
        <x:param name="html4.structural.elements" select="1"/>
      </x:context>
      <x:expect label="An additional div for backward compatibility should be added, and id should be moved to div">
	<aside data-type="sidebar">
	  <div class="sidebar" id="sidebarid">...</div>
	</aside>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When matching any 'figcaption'">
    <x:context>
      <figcaption>Figure heading</figcaption>
    </x:context>

    <x:scenario label="With html4.structural.elements turned off">
      <x:context>
        <x:param name="html4.structural.elements" select="0"/>
      </x:context>
      <x:expect label="Element tagging and attributes should be preserved as is">
	<figcaption>Figure heading</figcaption>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="With html4.structural.elements turned on">
      <x:context>
        <x:param name="html4.structural.elements" select="1"/>
      </x:context>
      <x:expect label="Caption should be converted to h6">
	<h6>Figure heading</h6>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <!-- Footnote tests -->
  <x:scenario label="When a footnote is matched">
    <x:context select="(/h:p/h:span[@data-type='footnote'])[1]">
      <p>This is the text<span id="fn_id_yo" data-type="footnote">And this is the footnote</span></p>
    </x:context>
    
    <x:scenario label="With process.footnotes disabled">
      <x:context>
	<x:param name="process.footnotes" select="0"/>
      </x:context>
      <x:expect label="Footnote should be copied to output as is">
	<span data-type="footnote" id="fn_id_yo" data-footnote-marker="...">And this is the footnote</span>
      </x:expect>
    </x:scenario>

    <x:scenario label="With process.footnotes enabled">
      <x:context>
	<x:param name="process.footnotes" select="1"/>
      </x:context>
      <x:expect label="Footnote should be processed to a noteref">
	<sup>
	<a data-type="noteref" id="fn_id_yo-marker" href="#fn_id_yo">1</a>
	</sup>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When footnote is matched">
    <x:context>
      <section data-type="chapter" id="first_ch">
	<h1>First chapter</h1>
	<p>This chapter has a couple footnotes:</p>
	<p>Here's the first footnote<span  data-type="footnote">Footnote #1 in Chapter #1</span></p>
	<p>Here's the second footnote<span data-type="footnote">Footnote #2 in Chapter #1</span></p>
      </section>
      <section data-type="chapter" id="second_ch">
	<h1>Second chapter</h1>
	<p>This chapter also has a couple footnotes:</p>
	<p>Here's the first footnote<span data-type="footnote">Footnote #1 in Chapter #2</span></p>
	<p>Here's the second footnote<span data-type="footnote">Footnote #2 in Chapter #2</span></p>
      </section>
      <div data-type="part" id="the_part">
	<h1>Here's a part</h1>
	<p>This part has two footnotes</p>
	<p>Here's the first footnote<span data-type="footnote">Footnote #1 in Part</span></p>
	<p>Here's the second footnote<span data-type="footnote">Footnote #2 in Part</span></p>
	<section data-type="chapter" id="third_ch">
	  <h1>Third chapter</h1>
	  <p>This chapter also has a couple footnotes:</p>
	  <p>Here's the first footnote<span data-type="footnote">Footnote #1 in Chapter #2</span></p>
	  <p>Here's the second footnote<span id="second_part_fn" data-type="footnote">Footnote #2 in Chapter #2</span></p>
	  <p>Here's a footnoteref to the second footnote<a data-type="footnoteref" href="#second_part_fn"/></p>
	</section>
      </div>
      <section data-type="appendix" id="the_app">
	<h1>The Appendix</h1>
	<p>The appendix also has a couple footnotes:</p>
	<p>Here's the first footnote<span data-type="footnote">Footnote #1 in the Appendix</span></p>
	<p>Here's the second footnote<span data-type="footnote">Footnote #2 in the Appendix</span></p>
      </section>
    </x:context>

    <x:scenario label="With process footnotes disabled and footnote.reset.numbering.at.chapter.level disabled">
      <x:context select="(/h:section[@id='second_ch']//h:span[@data-type='footnote'])[2]">
	<x:param name="process.footnotes" select="0"/>
	<x:param name="footnote.reset.numbering.at.chapter.level" select="0"/>
      </x:context>
      <x:expect label="Footnote should be postprocessing with the proper data-footnote-marker attribute">
	<span data-footnote-marker="4" data-type="footnote">Footnote #2 in Chapter #2</span>
      </x:expect>
    </x:scenario>

    <x:scenario label="With process footnotes disabled and footnote.reset.numbering.at.chapter.level enabled">
      <x:context select="(/h:section[@id='second_ch']//h:span[@data-type='footnote'])[2]">
	<x:param name="process.footnotes" select="0"/>
	<x:param name="footnote.reset.numbering.at.chapter.level" select="1"/>
      </x:context>
      <x:expect label="Footnote should be postprocessing with the proper data-footnote-marker attribute">
	<span data-footnote-marker="2" data-type="footnote">Footnote #2 in Chapter #2</span>
      </x:expect>
    </x:scenario>

    <x:scenario label="With process footnotes enabled and footnote.reset.numbering.at.chapter.level disabled">
      <x:context select="(/h:section[@id='second_ch']//h:span[@data-type='footnote'])[2]">
	<x:param name="process.footnotes" select="1"/>
	<x:param name="footnote.reset.numbering.at.chapter.level" select="0"/>
      </x:context>
      <x:expect label="Footnote should be processed to a noteref with proper number">
	<sup>
	<a data-type="noteref" id="..." href="...">4</a>
	</sup>
      </x:expect>
    </x:scenario>

    <x:scenario label="With process footnotes enabled and footnote.reset.numbering.at.chapter.level enabled">
      <x:context select="(/h:section[@id='second_ch']//h:span[@data-type='footnote'])[2]">
	<x:param name="process.footnotes" select="1"/>
	<x:param name="footnote.reset.numbering.at.chapter.level" select="1"/>
      </x:context>
      <x:expect label="Footnote should be processed to a noteref with proper number">
	<sup>
	<a data-type="noteref" id="..." href="...">2</a>
	</sup>
      </x:expect>
    </x:scenario>

    <x:scenario label="With process footnotes enabled and footnote.reset.numbering.at.chapter.level disabled (end-of-section footnote paras)">
      <x:context select="(/h:section[@id='second_ch']//h:span[@data-type='footnote'])[2]" mode="generate.footnote">
	<x:param name="process.footnotes" select="1"/>
	<x:param name="footnote.reset.numbering.at.chapter.level" select="0"/>
      </x:context>
      <x:expect label="Footnote should be processed to a para with anchor and proper number">
	<p data-type="footnote" id="...">
	  <sup><a href="...">4</a></sup> Footnote #2 in Chapter #2</p>
      </x:expect>
    </x:scenario>

    <x:scenario label="With process footnotes enabled and footnote.reset.numbering.at.chapter.level enabled (end-of-section footnote paras)">
      <x:context select="(/h:section[@id='second_ch']//h:span[@data-type='footnote'])[2]" mode="generate.footnote">
	<x:param name="process.footnotes" select="1"/>
	<x:param name="footnote.reset.numbering.at.chapter.level" select="1"/>
      </x:context>
      <x:expect label="Footnote should be processed to a para with anchor and proper number">
	<p data-type="footnote" id="...">
	  <sup><a href="...">2</a></sup> Footnote #2 in Chapter #2</p>
      </x:expect>
    </x:scenario>

    <x:scenario label="On a footnoteref with process footnotes enabled and footnote.reset.numbering.at.chapter.level disabled">
      <x:context select="(/h:div[@data-type='part']/h:section[@id='third_ch']//h:a[@data-type='footnoteref'])[1]">
	<x:param name="process.footnotes" select="1"/>
	<x:param name="footnote.reset.numbering.at.chapter.level" select="0"/>
      </x:context>
      <x:expect label="Footnote should be processed to a noteref with proper number">
	<sup>
	<a data-type="noteref" href="...">8</a>
	</sup>
      </x:expect>
    </x:scenario>

    <x:scenario label="On a footnoteref with process footnotes enabled and footnote.reset.numbering.at.chapter.level enabled">
      <x:context select="(/h:div[@data-type='part']/h:section[@id='third_ch']//h:a[@data-type='footnoteref'])[1]">
	<x:param name="process.footnotes" select="1"/>
	<x:param name="footnote.reset.numbering.at.chapter.level" select="1"/>
      </x:context>
      <x:expect label="Footnote should be processed to a noteref with proper number">
	<sup>
	<a data-type="noteref" href="...">2</a>
	</sup>
      </x:expect>
    </x:scenario>
    
    <x:scenario label="In numbering mode with footnote.reset.numbering.at.chapter.level disabled (first chapter)">
      <x:context select="(/h:section[@id='first_ch']//h:span[@data-type='footnote'])[2]" mode="footnote.number">
	<x:param name="footnote.reset.numbering.at.chapter.level" select="0"/>
      </x:context>
      <x:expect label="The correct number should be generated">2</x:expect>
    </x:scenario>

    <x:scenario label="In numbering mode with footnote.reset.numbering.at.chapter.level disabled (second chapter)">
      <x:context select="(/h:section[@id='second_ch']//h:span[@data-type='footnote'])[2]" mode="footnote.number">
	<x:param name="footnote.reset.numbering.at.chapter.level" select="0"/>
      </x:context>
      <x:expect label="The correct number should be generated">4</x:expect>
    </x:scenario>

    <x:scenario label="In numbering mode with footnote.reset.numbering.at.chapter.level disabled (part)">
      <x:context select="(/h:div[@id='the_part']//h:span[@data-type='footnote'])[1]" mode="footnote.number">
	<x:param name="footnote.reset.numbering.at.chapter.level" select="0"/>
      </x:context>
      <x:expect label="The correct number should be generated">5</x:expect>
    </x:scenario>

    <x:scenario label="In numbering mode with footnote.reset.numbering.at.chapter.level disabled (third chapter; in part)">
      <x:context select="(/h:div[@data-type='part']/h:section[@id='third_ch']//h:span[@data-type='footnote'])[1]" mode="footnote.number">
	<x:param name="footnote.reset.numbering.at.chapter.level" select="0"/>
      </x:context>
      <x:expect label="The correct number should be generated">7</x:expect>
    </x:scenario>

    <x:scenario label="In numbering mode with footnote.reset.numbering.at.chapter.level disabled (appendix)">
      <x:context select="(/h:section[@id='the_app']//h:span[@data-type='footnote'])[1]" mode="footnote.number">
	<x:param name="footnote.reset.numbering.at.chapter.level" select="0"/>
      </x:context>
      <x:expect label="The correct number should be generated">9</x:expect>
    </x:scenario>

    <x:scenario label="In numbering mode with footnote.reset.numbering.at.chapter.level enabled (first chapter)">
      <x:context select="(/h:section[@id='first_ch']//h:span[@data-type='footnote'])[2]" mode="footnote.number">
	<x:param name="footnote.reset.numbering.at.chapter.level" select="1"/>
      </x:context>
      <x:expect label="The correct number should be generated">2</x:expect>
    </x:scenario>

    <x:scenario label="In numbering mode with footnote.reset.numbering.at.chapter.level enabled (second chapter)">
      <x:context select="(/h:section[@id='second_ch']//h:span[@data-type='footnote'])[2]" mode="footnote.number">
	<x:param name="footnote.reset.numbering.at.chapter.level" select="1"/>
      </x:context>
      <x:expect label="The correct number should be generated">2</x:expect>
    </x:scenario>

    <x:scenario label="In numbering mode with footnote.reset.numbering.at.chapter.level enabled (part)">
      <x:context select="(/h:div[@id='the_part']//h:span[@data-type='footnote'])[1]" mode="footnote.number">
	<x:param name="footnote.reset.numbering.at.chapter.level" select="1"/>
      </x:context>
      <x:expect label="The correct number should be generated">1</x:expect>
    </x:scenario>

    <x:scenario label="In numbering mode with footnote.reset.numbering.at.chapter.level enabled (third chapter; in part)">
      <x:context select="(/h:div[@data-type='part']/h:section[@id='third_ch']//h:span[@data-type='footnote'])[1]" mode="footnote.number">
	<x:param name="footnote.reset.numbering.at.chapter.level" select="1"/>
      </x:context>
      <x:expect label="The correct number should be generated">1</x:expect>
    </x:scenario>

    <x:scenario label="In numbering mode with footnote.reset.numbering.at.chapter.level enabled (appendix)">
      <x:context select="(/h:section[@id='the_app']//h:span[@data-type='footnote'])[1]" mode="footnote.number">
	<x:param name="footnote.reset.numbering.at.chapter.level" select="1"/>
      </x:context>
      <x:expect label="The correct number should be generated">1</x:expect>
    </x:scenario>

  </x:scenario>

  <x:scenario label="When a footnoteref is matched">
    <x:context select="(/h:p/h:a[@data-type='footnoteref'])[1]">
      <p>This is the text<span data-type="footnote">And this is the footnote</span></p>
      <p>More text<span data-type="footnote" id="best_footnote_ever">Another footnote, yo!</span></p>
      <p>And now we've got a second paragraph that has a footnoteref here<a data-type="footnoteref" href="#best_footnote_ever"/></p>
    </x:context>
    
    <x:scenario label="With process.footnotes disabled">
      <x:context>
	<x:param name="process.footnotes" select="0"/>
      </x:context>
      <x:expect label="Footnoteref should be processed to marker with correct number">
	<sup class="footnoteref">2</sup>
      </x:expect>
    </x:scenario>

    <x:scenario label="With process.footnotes enabled">
      <x:context>
	<x:param name="process.footnotes" select="1"/>
      </x:context>
      <x:expect label="Footnote should be processed to a noteref">
	<sup>
	<a data-type="noteref" href="...">2</a>
	</sup>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <!-- Table footnote tests -->
  <x:scenario label="When a table with footnotes is matched">
    <x:context>
      <table>
	<caption>Four colors</caption>
	<tbody>
	  <tr>
	    <td>Vermillion<span id="tf1" data-type="footnote">Reddish</span></td>
	    <td>Cerulean<span id="tf2" data-type="footnote">Bluish</span></td>
	  </tr>
	  <tr>
	    <td>Chartreuse<span id="tf3" data-type="footnote">Greenish</span></td>
	    <td>Fuschia<span id="tf4" data-type="footnote">Purplish</span></td>
	  </tr>
	  <tr>
	    <td>Teal<a data-type="footnoteref" href="#tf3"/></td>
	    <td>Eggplant<a data-type="footnoteref" href="#tf4"/></td>
	  </tr>
	</tbody>
      </table>
    </x:context>

    <x:expect label="Footnotes should be added to a tbody section at end of table">
      <table>
	<caption>...</caption>
	<tbody>...</tbody>
	<tbody>
	  <tr class="footnotes">
	    <td colspan="2">
	      <p data-type="footnote" id="tf1"><sup><a href="#tf1-marker">a</a></sup> Reddish</p>
	      <p data-type="footnote" id="tf2"><sup><a href="#tf2-marker">b</a></sup> Bluish</p>
	      <p data-type="footnote" id="tf3"><sup><a href="#tf3-marker">c</a></sup> Greenish</p>
	      <p data-type="footnote" id="tf4"><sup><a href="#tf4-marker">d</a></sup> Purplish</p>
	    </td>
	  </tr>
	</tbody>
      </table>
    </x:expect>

    <!-- Same result regardless of whether process.footnotes is disabled or enabled -->
    <x:scenario label="With process.footnotes disabled">
      <x:context select="//h:span[@id='tf4']">
	<x:param name="process.footnotes" select="0"/>
      </x:context>
      <x:expect label="The footnote callout should be converted to a superscripted hyperlink with a lower-alpha marker">
	<sup><a data-type="noteref" id="tf4-marker" href="#tf4">d</a></sup>
      </x:expect>
    </x:scenario>

    <x:scenario label="With process.footnotes enabled">
      <x:context select="//h:span[@id='tf4']">
	<x:param name="process.footnotes" select="1"/>
      </x:context>
      <x:expect label="The footnote callout should be converted to a superscripted hyperlink with a lower-alpha marker">
	<sup><a data-type="noteref" id="tf4-marker" href="#tf4">d</a></sup>
      </x:expect>
    </x:scenario>

    <x:scenario label="(footnoteref)">
      <x:context select="(//h:a[@data-type='footnoteref'])[1]"/>
      <x:expect label="The proper footnote callout should be generated with a lower-alpha marker">
	<sup><a data-type="noteref" href="#tf3">c</a></sup>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <!-- Additional table footnote placement tests for different table source markup -->
  <x:scenario label="When a table with footnotes is matched (no tbody)">
    <x:context>
      <table>
	<caption>Four colors</caption>
	<tr>
	  <td>Vermillion<span id="tf1" data-type="footnote">Reddish</span></td>
	  <td>Cerulean<span id="tf2" data-type="footnote">Bluish</span></td>
	</tr>
	<tr>
	  <td>Chartreuse<span id="tf3" data-type="footnote">Greenish</span></td>
	  <td>Fuschia<span id="tf4" data-type="footnote">Purplish</span></td>
	</tr>
	<tr>
	  <td>Teal<a data-type="footnoteref" href="#tf3"/></td>
	  <td>Eggplant<a data-type="footnoteref" href="#tf4"/></td>
	</tr>
      </table>
    </x:context>

    <x:expect label="Footnotes should be added to a tr at the end of the table">
      <table>
	<caption>...</caption>
	<tr>...</tr>
	<tr>...</tr>
	<tr>...</tr>
	<tr class="footnotes">
	  <td colspan="2">
	    <p data-type="footnote" id="tf1"><sup><a href="#tf1-marker">a</a></sup> Reddish</p>
	    <p data-type="footnote" id="tf2"><sup><a href="#tf2-marker">b</a></sup> Bluish</p>
	    <p data-type="footnote" id="tf3"><sup><a href="#tf3-marker">c</a></sup> Greenish</p>
	    <p data-type="footnote" id="tf4"><sup><a href="#tf4-marker">d</a></sup> Purplish</p>
	  </td>
	</tr>
      </table>
    </x:expect>
  </x:scenario>

  <x:scenario label="When a section is matched that has both footnotes and table footnotes">
    <x:context>
      <section data-type="chapter">
	<h1>All about colors</h1>
	<p>The following table<span data-type="footnote">Made with love</span> lists some colors</p>
	<table>
	  <caption>Four colors</caption>
	  <tbody>
	    <tr>
	      <td>Vermillion<span id="tf1" data-type="footnote">Reddish</span></td>
	      <td>Cerulean<span id="tf2" data-type="footnote">Bluish</span></td>
	    </tr>
	    <tr>
	      <td>Chartreuse<span id="tf3" data-type="footnote">Greenish</span></td>
	    <td>Fuschia<span id="tf4" data-type="footnote">Purplish</span></td>
	    </tr>
	  </tbody>
	</table>
	<p>I hope you found this table accurate<span data-type="footnote">If not, please send errata</span></p>
      </section>
    </x:context>

    <x:scenario label="With process.footnotes disabled">
      <x:context>
	<x:param name="process.footnotes" select="0"/>
      </x:context>
      <x:expect label="There should be 4 footnotes at end of table" test="count(//h:table//h:tr[@class = 'footnotes']//*[@data-type='footnote']) = 4"/>
      <x:expect label="There should be no footnotes at end of section" test="count(//h:section/h:aside//*[@data-type='footnote']) = 0"/>
    </x:scenario>

    <x:scenario label="With process.footnotes enabled">
      <x:context>
	<x:param name="process.footnotes" select="1"/>
      </x:context>
      <x:expect label="There should be 4 footnotes at end of table" test="count(//h:table//h:tr[@class = 'footnotes']//*[@data-type='footnote']) = 4"/>
      <x:expect label="There should be 2 footnotes at end of section" test="count(//h:section/h:aside//*[@data-type='footnote']) = 2"/>
      <x:expect label="Footnotes at end of section should be numbered in sequence" test="every $footnote in (//h:p[@data-type='footnote'][ancestor::h:aside]) satisfies $footnote[count(preceding-sibling::h:p[@data-type='footnote']) + 1 = h:sup/h:a]"/>
    </x:scenario>

  </x:scenario>

  <!-- Comment-toggle tests -->
  <x:scenario label="When matching a block element with data-type='comment'">
    <x:context>
      <div data-type="comment">
	<p>This is a comment. Or, actually, a meta-comment</p>
      </div>
    </x:context>

    <x:scenario label="With show-comments disabled">
      <x:context>
	<x:param name="show-comments" select="0"/>
      </x:context>
      <x:expect label="Comment should be dropped from output" select="()"/>
    </x:scenario>
    
    <x:scenario label="With show-comments enabled">
      <x:context>
	<x:param name="show-comments" select="1"/>
      </x:context>
      <x:expect label="Comment should be preserved as is">
	<div data-type="comment">
	  <p>This is a comment. Or, actually, a meta-comment</p>
	</div>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When matching an inline element with data-type='comment'">
    <x:context select="(//h:span[@data-type='comment'])[1]">
      <p>This book was written in HTMLBook <span data-type="comment">Hooray!!!</span></p>
    </x:context>

    <x:scenario label="With show-comments disabled">
      <x:context>
	<x:param name="show-comments" select="0"/>
      </x:context>
      <x:expect label="Comment should be dropped from output" select="()"/>
    </x:scenario>
    
    <x:scenario label="With show-comments enabled">
      <x:context>
	<x:param name="show-comments" select="1"/>
      </x:context>
      <x:expect label="Comment should be preserved as is">
	<span data-type="comment">Hooray!!!</span>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When matching an XML block comment">
    <x:context select="(//comment())[1]">
      <section data-type="chapter">
	<h1>This is a chapter title</h1>
	<!--This is an editorial comment-->
	<p>This is some text</p>
      </section>
    </x:context>
    
    <x:scenario label="With show-comments disabled">
      <x:context>
	<x:param name="show-comments" select="0"/>
      </x:context>
      <x:expect label="Comment should be left as is in output">
	<!--This is an editorial comment-->
      </x:expect>
    </x:scenario>

    <x:scenario label="With show-comments enabled">
      <x:context>
	<x:param name="show-comments" select="1"/>
      </x:context>
      <x:expect label="Comment should be transformed into a paragraph with a class of 'comment'">
	<p class="comment">This is an editorial comment</p>
      </x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When matching an XML inline comment">
    <x:context select="(//comment())[1]">
      <p>This is some text <!--with an inline comment--></p>
    </x:context>
    
    <x:scenario label="With show-comments disabled">
      <x:context>
	<x:param name="show-comments" select="0"/>
      </x:context>
      <x:expect label="Comment should be left as is in output">
	<!--with an inline comment-->
      </x:expect>
    </x:scenario>

    <x:scenario label="With show-comments enabled">
      <x:context>
	<x:param name="show-comments" select="1"/>
      </x:context>
      <x:expect label="Comment should be transformed into a span with a class of 'comment'">
	<span class="comment">with an inline comment</span>
      </x:expect>
    </x:scenario>
  </x:scenario>


  <x:scenario label="When matching XML block comments (with comments enabled) in block-or-inline contexts">
    <x:context select="(//comment())[1]">
      <x:param name="show-comments" select="1"/>
      <blockquote>
	<p>Paragraph</p>
	<!--This is a block comment-->
	<p>Another paragraph</p>
      </blockquote>
    </x:context>
    <x:expect label="Comment should be transformed into a paragraph with a class of 'comment'">
      <p class="comment">This is a block comment</p>
    </x:expect>
  </x:scenario>

  <x:scenario label="When matching XML inline comments (with comments enabled) in block-or-inline contexts">
    <x:context select="(//comment())[1]">
      <x:param name="show-comments" select="1"/>
      <blockquote>
	Text <!--This is an inline comment--> and some <em>more text</em>
      </blockquote>
    </x:context>
    <x:expect label="Comment should be transformed into a span with a class of 'comment'">
      <span class="comment">This is an inline comment</span>
    </x:expect>
  </x:scenario>
</x:description>
