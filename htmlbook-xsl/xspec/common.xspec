<?xml version="1.0" encoding="UTF-8"?>

<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec"
               xmlns:functx="http://www.functx.com"
	       xmlns="http://www.w3.org/1999/xhtml"
	       xmlns:h="http://www.w3.org/1999/xhtml"
               stylesheet="../htmlbook.xsl">

  <x:param name="label.numeration.by.data-type">
appendix:A
chapter:1
part:I
sect1:a
sect2:none
sect3:none
sect4:none
sect5:none
  </x:param>

  <!-- Test suite for common.xsl -->

  <!-- Title markup tests -->
  <x:scenario label="When generating a title for a section">
    <x:context mode="title.markup">
      <section data-type="sect1">
	<h1>jQuery rocks!</h1>
	<h2>Ignore the second heading!</h2>
	<p>I like all the dollar signs</p>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="Copy the first h1-h6">jQuery rocks!</x:expect>
  </x:scenario>

  <x:scenario label="When encountering a title for a section that has a heading with child nodes">
    <x:context mode="title.markup">
      <section data-type="sect2">
	<h2>XPath <em>is</em> <strong>the bestest</strong></h2>
	<h1>Ignore the second heading!</h1>
	<p>I like all the forward slashes (solidi)</p>
      </section>
    </x:context>
    <x:expect label="Copy the child content of the first h1-h6 as is">XPath <em>is</em> <strong>the bestest</strong></x:expect>
  </x:scenario>

  <x:scenario label="When generating a title for a section that has heading info captured in a header element">
    <x:context mode="title.markup">
      <section data-type="chapter">
	<header>
	  <h1>Get this heading!</h1>
	  <p data-type="subtitle">Ignore the second headling!</p>
	</header>
	<p>This is some boilerplate text</p>
      </section>
    </x:context>
    <x:expect label="Copy the first h1 in the header element">Get this heading!</x:expect>
  </x:scenario>

  <!-- Label markup tests -->
  <!-- This section's tests based on values in label.numeration.by.data-type global param -->
  <x:scenario label="When generating a label for a section (chapter)">
    <x:context mode="label.markup" select="/h:body/h:section[@data-type='chapter'][2]">
      <body>
	<section data-type="chapter">
	  <h1>First one!</h1>
	  <p>Yup!</p>
	</section>
	<section data-type="chapter">
	  <h1>Second one!</h1>
	  <p>Yeah!</p>
	</section>
	<section data-type="appendix">
	  <h1>Appendix, yo!</h1>
	  <p>You betcha!</p>
	</section>
      </body>
    </x:context>
    <!-- check the result -->
    <x:expect label="The appropriate numeration value should be generated">2</x:expect>
  </x:scenario>

  <x:scenario label="When generating a label for a part div">
    <x:context mode="label.markup" select="/h:body/h:div[@data-type='part'][3]">
      <body>
	<div data-type="part">
	  <h1>Prefaces!</h1>
	  <section data-type="preface">
	    <h1>First one!</h1>
	    <p>Yup!</p>
	  </section>
	</div>
	<div data-type="part">
	  <h1>Chapters!</h1>
	  <section data-type="chapter">
	    <h1>Love this sample markup!</h1>
	    <p>Oh yeah!</p>
	  </section>
	</div>
	<div data-type="part">
	  <h1>Appendixes</h1>
	  <section data-type="appendix">
	    <h1>Why plural? There's only one here!</h1>
	    <p>D'oh!</p>
	  </section>
	</div>
      </body>
    </x:context>
    <!-- check the result -->
    <x:expect label="The appropriate numeration value should be generated">III</x:expect>
  </x:scenario>

  <x:scenario label="When generating a label for a lower-level section">
    <x:context mode="label.markup" select="/h:section[@data-type='chapter']/h:section[@data-type='sect1'][1]">
      <section data-type="chapter">
	<h1>Lots of sect1s in this one</h1>
	<section data-type="sect1">
	  <h1>First subheading</h1>
	  <p>Un!</p>
	</section>
	<section data-type="sect1">
	  <h1>Second subheading</h1>
	  <p>Deux!</p>
	</section>
	<section data-type="sect1">
	  <h1>Third subheading</h1>
	  <p>Trois!</p>
	</section>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="The appropriate numeration value should be generated">a</x:expect>
  </x:scenario>

  <x:scenario label="When generating a label for a section with no label specified in params">
    <x:context mode="label.markup" select="/h:section[@data-type='chapter']/h:section[@data-type='sect1'][2]/h:section[@data-type='sect2'][1]">
      <section data-type="chapter">
	<h1>Lots of sect1s in this one</h1>
	<section data-type="sect1">
	  <h1>First subheading</h1>
	  <p>Un!</p>
	</section>
	<section data-type="sect1">
	  <h1>Second subheading</h1>
	  <p>Deux!</p>
	  <section data-type="sect2">
	    <h2>Sub-subheading</h2>
	    <p>Woohoo!</p>
	  </section>
	</section>
	<section data-type="sect1">
	  <h1>Third subheading</h1>
	  <p>Trois!</p>
	</section>
      </section>
    </x:context>
    <!-- check the result -->
    <x:expect label="The appropriate numeration value should be generated" select="()"/>
  </x:scenario>

  <x:scenario label="When generating a label for a section (chapter) in a part">
    <x:context mode="label.markup" select="/h:body/h:div[@data-type='part'][2]/h:section[@data-type='chapter'][1]">
      <body>
	<div data-type="part">
	  <h1>First set o chapters!</h1>
	  <section data-type="chapter">
	    <h1>First one!</h1>
	    <p>Yup!</p>
	  </section>
	  <section data-type="chapter">
	    <h1>Second one!</h1>
	    <p>Oh yeah!</p>
	  </section>
	</div>
	<div data-type="part">
	  <h1>Second set o chapters</h1>
	  <section data-type="chapter">
	    <h1>Third one!</h1>
	    <p>Hooray!</p>
	  </section>
	</div>
      </body>
    </x:context>
    <x:expect label="The appropriate numeration value should be generated (absolute, not relative to part)">3</x:expect>
  </x:scenario>

  <x:scenario label="When generating a label for a figure in a chapter">
    <x:context select="(//h:section//h:figure)[2]" mode="label.markup">
      <section data-type="chapter">
	<h1>This is a chapter heading</h1>
	<p>Running out of amusing things to say</p>
	<figure>
	  <img src="tokyo.png"/>
	  <figcaption>A picture of the Tokyo skyline</figcaption>
	</figure>
	
	<figure>
	  <img src="paris.png"/>
	  <figcaption>A picture of the Paris skyline</figcaption>
	</figure>
	</section>
    </x:context>
    
    <x:scenario label="With label.formal.with.ancestor disabled">
      <x:context>
	<x:param name="label.formal.with.ancestor" select="0"/>
      </x:context>
      <x:expect label="The appropriate numeration value should be generated">2</x:expect>
    </x:scenario>
    
    <x:scenario label="With label.formal.with.ancestor enabled">
      <x:context>
	<x:param name="label.formal.with.ancestor" select="1"/>
      </x:context>
      <x:expect label="The appropriate numeration value should be generated">1-2</x:expect>
    </x:scenario>
  </x:scenario>
  
  <x:scenario label="When generating a label for a figure in a preface">
    <x:context select="(//h:section//h:figure)[2]" mode="label.markup">
      <section data-type="preface">
	<h1>This is a preface heading</h1>
	<p>Some info about prereqs you need to appreciate this book</p>
	<figure>
	  <img src="pencil.png"/>
	  <figcaption>A picture of a pencil</figcaption>
	</figure>
	
	<figure>
	  <img src="chalk.png"/>
	  <figcaption>A picture of chalk</figcaption>
	</figure>
      </section>
    </x:context>

    <x:scenario label="With label.formal.with.ancestor disabled">
      <x:context>
	<x:param name="label.formal.with.ancestor" select="0"/>
      </x:context>
      <x:expect label="The appropriate numeration value should be generated">2</x:expect>
    </x:scenario>
    
    <x:scenario label="With label.formal.with.ancestor enabled">
      <x:context>
	<x:param name="label.formal.with.ancestor" select="1"/>
      </x:context>
      <x:expect label="The appropriate numeration value should be generated">P-2</x:expect>
    </x:scenario>
  </x:scenario>

  <x:scenario label="When generating a label for a figure in an introduction">
    <x:context select="(//h:section//h:figure)[2]" mode="label.markup">
      <section data-type="introduction">
	<h1>This is the Introduction heading</h1>
	<p>Introducing you to this book!</p>
	<figure>
	  <img src="dachshund.png"/>
	  <figcaption>A picture of a dachshund</figcaption>
	</figure>
	
	<section data-type="sect1">
	  <h1>Section title</h1>
	  <figure>
	    <img src="labrador.png"/>
	    <figcaption>A picture of a labrador</figcaption>
	  </figure>
	</section>
      </section>
    </x:context>

    <x:scenario label="With label.formal.with.ancestor disabled">
      <x:context>
	<x:param name="label.formal.with.ancestor" select="0"/>
      </x:context>
      <x:expect label="The appropriate numeration value should be generated">2</x:expect>
    </x:scenario>
    
    <x:scenario label="With label.formal.with.ancestor enabled">
      <x:context>
	<x:param name="label.formal.with.ancestor" select="1"/>
      </x:context>
      <x:expect label="The appropriate numeration value should be generated">I-2</x:expect>
    </x:scenario>
  </x:scenario>

    <x:scenario label="When generating a label for a figure in a Part">
      <x:context select="(//h:div[@data-type='part']//h:figure)[2]" mode="label.markup">
	<div data-type="part">
	  <h1>This is a Part heading</h1>
	  <p>More text here</p>
	  <figure>
	    <img src="barcelona.png"/>
	    <figcaption>A picture of the Barcelona skyline</figcaption>
	  </figure>

	  <figure>
	    <img src="quito.png"/>
	    <figcaption>A picture of the Quito skyline</figcaption>
	  </figure>
	</div>
      </x:context>

      <x:scenario label="With label.formal.with.ancestor disabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="0"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">2</x:expect>
      </x:scenario>

      <x:scenario label="With label.formal.with.ancestor enabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="1"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">I-2</x:expect>
      </x:scenario>
    </x:scenario>

    <x:scenario label="When generating a label for a figure in a Part (preceding figs)">
      <x:context select="(//h:div[@data-type='part']//h:figure)[2]" mode="label.markup">
	<section data-type="preface">
	  <h1>Preface Heading</h1>
	  <p>Here is a figure that precedes the part:</p>
	  <figure>
	    <img src="oslo.png"/>
	    <figcaption>A picture of the Oslo skyline</figcaption>
	  </figure>
	</section>
	<div data-type="part">
	  <h1>This is a Part heading</h1>
	  <p>More text here</p>
	  <figure>
	    <img src="barcelona.png"/>
	    <figcaption>A picture of the Barcelona skyline</figcaption>
	  </figure>

	  <figure>
	    <img src="quito.png"/>
	    <figcaption>A picture of the Quito skyline</figcaption>
	  </figure>
	</div>
      </x:context>

      <x:scenario label="With label.formal.with.ancestor disabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="0"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">3</x:expect>
      </x:scenario>

      <x:scenario label="With label.formal.with.ancestor enabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="1"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">I-2</x:expect>
      </x:scenario>
    </x:scenario>

    <x:scenario label="When generating a label for a table in a chapter">
      <x:context select="(//h:section//h:table)[2]" mode="label.markup">
	<section data-type="chapter">
	  <h1>This is a chapter heading</h1>
	  <p>Running out of amusing things to say</p>
	  <table>
	    <caption>Some programming languages</caption>
	    <tbody>
	      <tr>
		<td>Python</td>
		<td>Java</td>
	      </tr>
	      <tr>
		<td>Ruby</td>
		<td>Perl</td>
	      </tr>
	    </tbody>
	  </table>
	  <table>
	    <caption>Our favorite colors</caption>
	    <thead>
	      <tr>
		<th>Name</th>
		<th>Color</th>
	      </tr>
	    </thead>
	    <tbody>
	      <tr>
		<td>Tom</td>
		<td>vermilion</td>
	      </tr>
	      <tr>
		<td>Richard</td>
		<td>fuchsia</td>
	      </tr>
	      <tr>
		<td>Harry</td>
		<td>cerulean</td>
	      </tr>
	    </tbody>
	  </table>
	</section>
      </x:context>

      <x:scenario label="With label.formal.with.ancestor disabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="0"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">2</x:expect>
      </x:scenario>

      <x:scenario label="With label.formal.with.ancestor enabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="1"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">1-2</x:expect>
      </x:scenario>
    </x:scenario>

    <x:scenario label="When generating a label for a table in a preface">
      <x:context select="(//h:section//h:table)[2]" mode="label.markup">
	<section data-type="preface">
	  <h1>This is a preface heading</h1>
	  <p>Running out of amusing things to say</p>
	  <table>
	    <caption>Some dog breeds</caption>
	    <tbody>
	      <tr>
		<td>Poodle</td>
		<td>German Shepherd</td>
	      </tr>
	      <tr>
		<td>Bichon Frisé</td>
		<td>Bearded Collie</td>
	      </tr>
	    </tbody>
	  </table>
	  <section data-type="sect1">
	    <h1>This section has another table</h1>
	    <table>
	      <caption>Our favorite vegetables</caption>
	      <thead>
		<tr>
		  <th>Name</th>
		  <th>Vegetable</th>
		</tr>
	      </thead>
	      <tbody>
		<tr>
		  <td>Tom</td>
		  <td>carrot</td>
		</tr>
		<tr>
		  <td>Richard</td>
		  <td>potato</td>
		</tr>
		<tr>
		  <td>Harry</td>
		  <td>celery</td>
		</tr>
	      </tbody>
	    </table>
	  </section>
	</section>
      </x:context>

      <x:scenario label="With label.formal.with.ancestor disabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="0"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">2</x:expect>
      </x:scenario>

      <x:scenario label="With label.formal.with.ancestor enabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="1"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">P-2</x:expect>
      </x:scenario>
    </x:scenario>

    <x:scenario label="When generating a label for a table in an introduction">
      <x:context select="(//h:section//h:table)[2]" mode="label.markup">
	<section data-type="introduction">
	  <h1>This is an introduction heading</h1>
	  <p>Running out of amusing things to say</p>
	  <table>
	    <caption>Some more dog breeds</caption>
	    <tbody>
	      <tr>
		<td>Golden Retriever</td>
		<td>Weimaraner</td>
	      </tr>
	      <tr>
		<td>Basset Hound</td>
		<td>Scottish Terrier</td>
	      </tr>
	    </tbody>
	  </table>
	  <table>
	    <caption>Our favorite numbers</caption>
	    <thead>
	      <tr>
		<th>Name</th>
		<th>Number</th>
	      </tr>
	    </thead>
	    <tbody>
	      <tr>
		<td>Tom</td>
		<td>18</td>
	      </tr>
	      <tr>
		<td>Richard</td>
		<td>123456789</td>
	      </tr>
	      <tr>
		<td>Harry</td>
		<td>0</td>
	      </tr>
	    </tbody>
	  </table>
	</section>
      </x:context>

      <x:scenario label="With label.formal.with.ancestor disabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="0"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">2</x:expect>
      </x:scenario>

      <x:scenario label="With label.formal.with.ancestor enabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="1"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">I-2</x:expect>
      </x:scenario>
    </x:scenario>

    <x:scenario label="When generating a label for a table in a Part">
      <x:context select="(//h:div[@data-type='part']//h:table)[2]" mode="label.markup">
	<div data-type="part">
	  <h1>This is a Part heading</h1>
	  <p>More text here</p>
	  <table>
	    <caption>Some programming languages</caption>
	    <tbody>
	      <tr>
		<td>Python</td>
		<td>Java</td>
	      </tr>
	      <tr>
		<td>Ruby</td>
		<td>Perl</td>
	      </tr>
	    </tbody>
	  </table>
	  <table>
	    <caption>Our favorite colors</caption>
	    <thead>
	      <tr>
		<th>Name</th>
		<th>Color</th>
	      </tr>
	    </thead>
	    <tbody>
	      <tr>
		<td>Tom</td>
		<td>vermilion</td>
	      </tr>
	      <tr>
		<td>Richard</td>
		<td>fuchsia</td>
	      </tr>
	      <tr>
		<td>Harry</td>
		<td>cerulean</td>
	      </tr>
	    </tbody>
	  </table>
	</div>
      </x:context>

      <x:scenario label="With label.formal.with.ancestor disabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="0"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">2</x:expect>
      </x:scenario>

      <x:scenario label="With label.formal.with.ancestor enabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="1"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">I-2</x:expect>
      </x:scenario>
    </x:scenario>

    <x:scenario label="When generating a label for a table in a Part (preceding tables)">
      <x:context select="(//h:div[@data-type='part']//h:table)[2]" mode="label.markup">
	<section data-type="preface">
	  <h1>Preface Heading</h1>
	  <p>Here is a table that precedes the part:</p>
	  <table>
	    <caption>Some beverages</caption>
	    <tbody>
	      <tr>
		<td>tea</td>
		<td>coffee</td>
	      </tr>
	      <tr>
		<td>lemonade</td>
		<td>beer</td>
	      </tr>
	    </tbody>
	  </table>
	</section>
	<div data-type="part">
	  <h1>This is a Part heading</h1>
	  <p>More text here</p>
	  <table>
	    <caption>Some programming languages</caption>
	    <tbody>
	      <tr>
		<td>Python</td>
		<td>Java</td>
	      </tr>
	      <tr>
		<td>Ruby</td>
		<td>Perl</td>
	      </tr>
	    </tbody>
	  </table>
	  <table>
	    <caption>Our favorite colors</caption>
	    <thead>
	      <tr>
		<th>Name</th>
		<th>Color</th>
	      </tr>
	    </thead>
	    <tbody>
	      <tr>
		<td>Tom</td>
		<td>vermilion</td>
	      </tr>
	      <tr>
		<td>Richard</td>
		<td>fuchsia</td>
	      </tr>
	      <tr>
		<td>Harry</td>
		<td>cerulean</td>
	      </tr>
	    </tbody>
	  </table>
	</div>
      </x:context>

      <x:scenario label="With label.formal.with.ancestor disabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="0"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">3</x:expect>
      </x:scenario>

      <x:scenario label="With label.formal.with.ancestor enabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="1"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">I-2</x:expect>
      </x:scenario>
    </x:scenario>

    <x:scenario label="When generating a label for an example in a chapter">
      <x:context select="(//h:section//h:div[@data-type='example'])[2]" mode="label.markup">
	<section data-type="chapter">
	  <h1>This is a chapter heading</h1>
	  <p>Running out of amusing things to say</p>
	  <div data-type="example">
	    <h6>My first code listing</h6>
	    <pre data-type="programlisting" data-code-language="ruby">puts "Hello World!"</pre>
	  </div>
	  <div data-type="example">
	    <h6>My second code listing</h6>
	    <pre data-type="programlisting" data-code-language="ruby">10000.times { puts "Hello World" }</pre>
	  </div>
	</section>
      </x:context>

      <x:scenario label="With label.formal.with.ancestor disabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="0"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">2</x:expect>
      </x:scenario>

      <x:scenario label="With label.formal.with.ancestor enabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="1"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">1-2</x:expect>
      </x:scenario>
    </x:scenario>

    <x:scenario label="When generating a label for an example in a preface">
      <x:context select="(//h:section//h:div[@data-type='example'])[2]" mode="label.markup">
	<section data-type="preface">
	  <h1>This is a preface heading</h1>
	  <p>Running out of amusing things to say</p>
	  <div data-type="example">
	    <h6>My third code listing</h6>
	    <pre data-type="programlisting" data-code-language="ruby">"abc".gsub("abc", "xyz")</pre>
	  </div>
	  <div data-type="example">
	    <h6>My fourth code listing</h6>
	    <pre data-type="programlisting" data-code-language="ruby">this_variable_holds_the_number_2 = 2</pre>
	  </div>
	</section>
      </x:context>

      <x:scenario label="With label.formal.with.ancestor disabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="0"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">2</x:expect>
      </x:scenario>

      <x:scenario label="With label.formal.with.ancestor enabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="1"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">P-2</x:expect>
      </x:scenario>
    </x:scenario>

    <x:scenario label="When generating a label for an example in an introduction">
      <x:context select="(//h:section//h:div[@data-type='example'])[2]" mode="label.markup">
	<section data-type="introduction">
	  <h1>This is an introduction heading</h1>
	  <p>Running out of amusing things to say</p>
	  <div data-type="example">
	    <h6>My fifth code listing</h6>
	    <pre data-type="programlisting" data-code-language="xslt">&lt;xsl:template match="h:h1"&gt;
  &lt;h2&gt;Heading&lt;/h2&gt;
&lt;/xsl:template&gt;</pre>
	  </div>
	  <section data-type="sect1">
	    <h1>This example is in a sect1</h1>
	    <div data-type="example">
	      <h6>My sixth code listing</h6>
	      <pre data-type="programlisting" data-code-language="css">h2 { color: green }</pre>
	    </div>
	  </section>
	</section>
      </x:context>

      <x:scenario label="With label.formal.with.ancestor disabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="0"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">2</x:expect>
      </x:scenario>

      <x:scenario label="With label.formal.with.ancestor enabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="1"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">I-2</x:expect>
      </x:scenario>
    </x:scenario>

    <x:scenario label="When generating a label for an example in a Part">
      <x:context select="(//h:div[@data-type='part']//h:div[@data-type='example'])[2]" mode="label.markup">
	<div data-type="part">
	  <h1>This is a Part heading</h1>
	  <p>More text here</p>
	  <div data-type="example">
	    <h6>My first code listing</h6>
	    <pre data-type="programlisting" data-code-language="ruby">puts "Hello World!"</pre>
	  </div>
	  <div data-type="example">
	    <h6>My second code listing</h6>
	    <pre data-type="programlisting" data-code-language="ruby">10000.times { puts "Hello World" }</pre>
	  </div>
	</div>
      </x:context>

      <x:scenario label="With label.formal.with.ancestor disabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="0"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">2</x:expect>
      </x:scenario>

      <x:scenario label="With label.formal.with.ancestor enabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="1"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">I-2</x:expect>
      </x:scenario>
    </x:scenario>

    <x:scenario label="When generating a label for an example in a Part (preceding examples)">
      <x:context select="(//h:div[@data-type='part']//h:div[@data-type='example'])[2]" mode="label.markup">
	<section data-type="preface">
	  <h1>Preface Heading</h1>
	  <p>Here is an example that precedes the part:</p>
	  <div data-type="example">
	    <h6>Python listing</h6>
	    <pre data-type="programlisting" data-code-language="python">print "My first python listing"</pre>
	  </div>
	</section>
	<div data-type="part">
	  <h1>This is a Part heading</h1>
	  <p>More text here</p>
	  <div data-type="example">
	    <h6>My first code listing</h6>
	    <pre data-type="programlisting" data-code-language="ruby">puts "Hello World!"</pre>
	  </div>
	  <div data-type="example">
	    <h6>My second code listing</h6>
	    <pre data-type="programlisting" data-code-language="ruby">10000.times { puts "Hello World" }</pre>
	  </div>
	</div>
      </x:context>

      <x:scenario label="With label.formal.with.ancestor disabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="0"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">3</x:expect>
      </x:scenario>

      <x:scenario label="With label.formal.with.ancestor enabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="1"/>
	</x:context>
	<x:expect label="The appropriate numeration value should be generated">I-2</x:expect>
      </x:scenario>
    </x:scenario>

    <x:scenario label="When generating a label for a table">
      <x:context select="(//h:section//h:table)[3]" mode="label.markup">
	<section data-type="chapter">
	  <h1>This is a chapter heading</h1>
	  <p>Running out of amusing things to say</p>
	  <table>
	    <!-- No caption -->
	    <tbody>
	      <tr>
		<td>Python</td>
		<td>Java</td>
	      </tr>
	      <tr>
		<td>Ruby</td>
		<td>Perl</td>
	      </tr>
	    </tbody>
	  </table>
	  <table>
	    <!-- Empty caption -->
	    <caption/>
	    <tbody>
	      <tr>
		<td>pencil</td>
	      </tr>
	      <tr>
		<td>paper</td>
	      </tr>
	    </tbody>
	  </table>
	  <table>
	    <caption>Our favorite colors</caption>
	    <thead>
	      <tr>
		<th>Name</th>
		<th>Color</th>
	      </tr>
	    </thead>
	    <tbody>
	      <tr>
		<td>Tom</td>
		<td>vermilion</td>
	      </tr>
	      <tr>
		<td>Richard</td>
		<td>fuchsia</td>
	      </tr>
	      <tr>
		<td>Harry</td>
		<td>cerulean</td>
	      </tr>
	    </tbody>
	  </table>
	</section>
      </x:context>

      <x:scenario label="With label.formal.with.ancestor disabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="0"/>
	</x:context>
	<x:expect label="Ignore 'informal' (uncaptioned or empty-captioned) tables in the count">1</x:expect>
      </x:scenario>

      <x:scenario label="With label.formal.with.ancestor enabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="1"/>
	</x:context>
	<x:expect label="Ignore 'informal' (uncaptioned or empty-captioned) tables in the count">1-1</x:expect>
      </x:scenario>
    </x:scenario>


    <x:scenario label="When generating a label for a figure">
      <x:context select="(//h:section//h:figure)[3]" mode="label.markup">
	<section data-type="chapter">
	  <h1>This is a chapter heading</h1>
	  <p>Running out of amusing things to say</p>
	  <figure>
	    <!-- No caption (technically shouldn't be a <figure> element here in this case) -->
	    <img src="tegucigalpa.png"/>
	  </figure>
	  <figure>
	    <!-- Empty caption -->
	    <figcaption/>
	    <img src="paramaribo.png"/>
	  </figure>
	  <figure>
	    <figcaption>Image of the Ouagadougou skyline</figcaption>
	    <img src="ouagadougou.png"/>
	  </figure>
	</section>
      </x:context>

      <x:scenario label="With label.formal.with.ancestor disabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="0"/>
	</x:context>
	<x:expect label="Ignore 'informal' (uncaptioned or empty-captioned) figures in the count">1</x:expect>
      </x:scenario>

      <x:scenario label="With label.formal.with.ancestor enabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="1"/>
	</x:context>
	<x:expect label="Ignore 'informal' (uncaptioned or empty-captioned) figures in the count">1-1</x:expect>
      </x:scenario>
    </x:scenario>

    <x:scenario label="When generating a label for a figure with empty caption">
      <x:context select="(//h:figure)[2]" mode="label.markup">
	<section data-type="chapter">
	  <h1>Look! A Chapter!</h1>
	  <p>Figure with a caption!</p>
	  <figure>
	    <figcaption>Image of Budapest skyline</figcaption>
	    <img src="budapest.png"/>
	  </figure>
	  <p>Figure with empty caption!</p>
	  <figure>
	    <img src="helsinki.png"/>
	    <figcaption/>
	  </figure>
	</section>
      </x:context>
      <x:scenario label="With label.formal.with.ancestor disabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="0"/>
	</x:context>
	<x:expect label="Don't return any text" select="()"/>
      </x:scenario>

      <x:scenario label="With label.formal.with.ancestor enabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="1"/>
	</x:context>
	<x:expect label="Don't return any text" select="()"/>
      </x:scenario>
    </x:scenario>

    <x:scenario label="When generating a label for a table with empty caption">
      <x:context select="(//h:table)[2]" mode="label.markup">
	<section data-type="chapter">
	  <h1>Look! A Chapter!</h1>
	  <p>Table with a caption!</p>
	  <table>
	    <caption>Recent US Presidents' pets</caption>
	    <thead>
	      <tr>
		<th>President</th>
		<th>Pet</th>
	      </tr>
	    </thead>
	    <tbody>
	      <tr>
		<td>Barack Obama</td>
		<td>Bo</td>
	      </tr>
	      <tr>
		<td>George W. Bush</td>
		<td>Miss Beazley</td>
	      </tr>
	      <tr>
		<td>Bill Clinton</td>
		<td>Socks</td>
	      </tr>
	    </tbody>
	  </table>
	  <p>Table with empty caption!</p>
	  <table>
	    <caption> </caption>
	    <tr>
	      <th>Food</th>
	      <th>Calories<span data-type="footnote">Stats via Google</span></th>
	    </tr>
	    <tr>
	      <td>slice of pizza</td>
	      <td>285</td>
	    </tr>
	    <tr>
	      <td>stalk of celery</td>
	      <td>6</td>
	    </tr>
	  </table>
	</section>
      </x:context>
      <x:scenario label="With label.formal.with.ancestor disabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="0"/>
	</x:context>
	<x:expect label="Don't return any text" select="()"/>
      </x:scenario>

      <x:scenario label="With label.formal.with.ancestor enabled">
	<x:context>
	  <x:param name="label.formal.with.ancestor" select="1"/>
	</x:context>
	<x:expect label="Don't return any text" select="()"/>
      </x:scenario>
    </x:scenario>

  <x:pending>

    <x:scenario label="When generating a label for a part div with label.section.with.ancestors enabled">
      <x:context>
      </x:context>
      <x:expect label="The appropriate numeration value should be generated"/>
    </x:scenario>

    <x:scenario label="When generating a label for a section (chapter) with label.section.with.ancestors enabled">
      <x:context>
      </x:context>
      <x:expect label="The appropriate numeration value should be generated"/>
    </x:scenario>

    <x:scenario label="When generating a label for a section (subsection) with label.section.with.ancestors enabled">
      <x:context>
      </x:context>
      <x:expect label="The appropriate numeration value should be generated"/>
    </x:scenario>

    <x:scenario label="When generating a label for an example">
      <x:context>
      </x:context>
      <x:expect label="The appropriate numeration value should be generated"/>
    </x:scenario>

    <x:scenario label="When generating a label for an example (label.formal.with.ancestor = false)">
      <x:context>
      </x:context>
      <x:expect label="The appropriate numeration value should be generated"/>
    </x:scenario>

  </x:pending>

  <!-- Heading processing templates -->
  <x:scenario label="When process-headings is run on a section heading with $autogenerate.labels turned off">
    <x:context mode="process-heading" select="/h:section/h:h1">
      <x:param name="autogenerate.labels" select="0"/>
      <section data-type="chapter">
	<h1>Don't touch this heading!</h1>
	<p>I said, don't touch it!</p>
      </section>
    </x:context>
    <x:expect label="The heading content should not change">
      <h1>Don't touch this heading!</h1>
    </x:expect>
  </x:scenario>

  <x:scenario label="When process-headings is run on a section heading with $autogenerate.labels turned on">
    <x:context mode="process-heading" select="/h:section/h:h1">
      <x:param name="autogenerate.labels" select="1"/>
      <section data-type="chapter">
	<h1>Touch this heading!</h1>
	<p>Add a label, pls</p>
      </section>
    </x:context>
    <x:expect label="The heading content should contain a label" test="exists(//h:h1[h:span[@class='label' and contains(., 'Chapter 1')]]) and contains(//h:h1[1], 'Touch this heading!')"/>
  </x:scenario>

  <x:scenario label="When process-headings is run on a div heading with $autogenerate.labels turned off">
    <x:context mode="process-heading" select="/h:div/h:h1">
      <x:param name="autogenerate.labels" select="0"/>
      <div data-type="example">
	<h1>Don't touch this heading!</h1>
	<p>I said, don't touch it!</p>
      </div>
    </x:context>
    <x:expect label="The heading content should not change">
      <h1>Don't touch this heading!</h1>
    </x:expect>
  </x:scenario>

  <x:scenario label="When process-headings is run on a div heading with $autogenerate.labels turned on">
    <x:context mode="process-heading" select="/h:section/h:div/h:h1">
      <x:param name="autogenerate.labels" select="1"/>
      <section data-type="chapter">
	<div data-type="example">
	  <h1>Touch this heading!</h1>
	  <p>Add a label, pls</p>
	</div>
      </section>
    </x:context>
    <x:expect label="The heading content should contain a label" test="exists(//h:h1[h:span[@class='label' and contains(., 'Example 1')]]) and contains(//h:h1[1], 'Touch this heading!')"/>
  </x:scenario>

  <x:scenario label="When process-headings is run on a table caption with $autogenerate.labels turned off">
    <x:context mode="process-heading" select="/h:table/h:caption">
      <x:param name="labeled-element-semantic-name" select="'table'"/>
      <x:param name="autogenerate.labels" select="0"/>
      <table>
	<caption>Do not touch this caption</caption>
	<tbody>
	  <tr>
	    <td>Cell 1</td>
	    <td>Cell 2</td>
	  </tr>
	</tbody>
      </table>
    </x:context>
    <x:expect label="The caption content should not change">
      <caption>Do not touch this caption</caption>
    </x:expect>
  </x:scenario>

  <x:scenario label="When process-headings is run on a table caption with $autogenerate.labels turned on">
    <x:context mode="process-heading" select="/h:section/h:table/h:caption">
      <x:param name="autogenerate.labels" select="1"/>
      <x:param name="labeled-element-semantic-name" select="'table'"/>
      <section data-type="chapter">
	<table>
	  <caption>Touch this caption!</caption>
	  <tbody>
	    <tr>
	      <td>Cell 1</td>
	      <td>Cell 2</td>
	    </tr>
	  </tbody>
	</table>
      </section>
    </x:context>
    <x:expect label="The caption content should contain a label" test="exists(//h:caption[h:span[@class='label' and contains(., 'Table 1')]]) and contains(//h:caption[1], 'Touch this caption!')"/>
  </x:scenario>

  <x:scenario label="When process-headings is run on a figure caption with $autogenerate.labels turned off">
    <x:context mode="process-heading" select="/h:figure/h:figcaption">
      <x:param name="labeled-element-semantic-name" select="'figure'"/>
      <x:param name="autogenerate.labels" select="0"/>
      <figure>
	<figcaption>Do not touch this caption</figcaption>
	<img src="adorable_puppy.png"/>
      </figure>
    </x:context>
    <x:expect label="The caption content should not change">
      <figcaption>Do not touch this caption</figcaption>
    </x:expect>
  </x:scenario>

  <x:scenario label="When process-headings is run on a figure caption with a different output element name specified">
    <x:context mode="process-heading" select="/h:figure/h:figcaption">
      <x:param name="labeled-element-semantic-name" select="'figure'"/>
      <x:param name="autogenerate.labels" select="0"/>
      <x:param name="output-element-name" select="'h5'"/>
      <figure>
	<figcaption>Do not touch this caption</figcaption>
	<img src="adorable_puppy.png"/>
      </figure>
    </x:context>
    <x:expect label="Change the output element name">
      <h5>Do not touch this caption</h5>
    </x:expect>
  </x:scenario>

  <x:scenario label="When process-headings is run on a figure caption with $autogenerate.labels turned on">
    <x:context mode="process-heading" select="/h:section/h:figure/h:figcaption">
      <x:param name="autogenerate.labels" select="1"/>
      <x:param name="labeled-element-semantic-name" select="'figure'"/>
      <section data-type="chapter">
	<figure>
	  <figcaption>Touch this caption!</figcaption>
	  <img src="adorable_puppy.png"/>
	</figure>
      </section>
    </x:context>
    <x:expect label="The caption content should contain a label" test="exists(//h:figcaption[h:span[@class='label' and contains(., 'Figure 1')]]) and contains(//h:figcaption[1], 'Touch this caption!')"/>
  </x:scenario>

  <!-- class.attribute handling -->
  <x:pending>
    <!-- Not sure XSpec can handle tests that generate just an attribute node, e.g.:
	  XTDE0420: Cannot create an attribute node (class) whose parent is a document node
      -->
    <x:scenario label="If an element is matched in class.attribute modee">
      <x:context mode="class.attribute"/>
      
    <x:scenario label="and its generated class attribute (via class.value) is empty">
      <x:context>
	<section data-type="chapter"/>
      </x:context>
      <x:expect label="No @class should be generated" test="not(exists(//@class))"/>
    </x:scenario>
    
    <x:scenario label="and its generated class attribute (via class.value) is non empty">
      <x:context>
	<section data-type="chapter" class="case-study"/>
      </x:context>
      <x:expect label="@class should be generated" test="exists(//@class)"/>
    </x:scenario>
    </x:scenario>
  </x:pending>

  <!-- class.value handling -->
  <x:scenario label="If XREF is matched in class.value mode">
    <x:context mode="class.value">
      <body>
	<section data-type="chapter" id="first">
	  <h1>First chapter</h1>
	  <p>Some text</p>
	  <p>XREF to second chapter is here: see <a id="chapter_xref" data-type="xref" href="#second"/></p>
	  <p>Now here's a sidebar:</p>
	  <aside data-type="sidebar" id="sidebar">
	    <h5>Sidebar heading</h5>
	    <p>Sidebar text</p>
	  </aside>
	  <p>XREF to the sect1 in second chapter: see <a id="sect1_xref" data-type="xref" href="#chapter2_sect1"/></p>
	</section>
	<section data-type="chapter" id="second">
	  <h1>Second chapter</h1>
	  <p>Let's add a sect1</p>
	  <section data-type="sect1" id="chapter2_sect1">
	    <h1>Subsection heading</h1>
	    <p>Always soft-code your cross-references</p>
	    <p>Like this one to the sidebar in the previous chapter: see <a class="underline" id="sidebar_xref" data-type="xref" href="#sidebar"/></p>
	  </section>
	</section>
      </body>
    </x:context>

    <x:scenario label="that points to an element in the xref.elements.pagenum.in.class list">
      <x:context select="//h:a[@data-type='xref'][@id='chapter_xref']">
	<x:param name="xref.elements.pagenum.in.class">chapter
sidebar
	</x:param>
	<x:param name="xref.target" select="//*[@id='second']"/>
      </x:context>
      <x:expect label="Class value of 'pagenum' should be returned">pagenum</x:expect>
    </x:scenario>

    <x:scenario label="that points to an element in the xref.elements.pagenum.in.class list (XREF already has class value)">
      <x:context select="//h:a[@data-type='xref'][@id='sidebar_xref']">
	<x:param name="xref.elements.pagenum.in.class">chapter
sidebar
	</x:param>
	<x:param name="xref.target" select="//h:aside[@id='sidebar']"/>
      </x:context>
      <x:expect label="Class value of 'pagenum' should be appended to existing class value list">underline pagenum</x:expect>
    </x:scenario>

    <x:scenario label="that points to an element *not in* the xref.elements.pagenum.in.class list (no existing class)">
      <x:context select="//h:a[@data-type='xref'][@id='sect1_xref']">
	<x:param name="xref.elements.pagenum.in.class">chapter
sidebar
	</x:param>
	<x:param name="xref.target" select="//*[@id='chapter2_sect1']"/>
      </x:context>
      <x:expect label="Class value of 'pagenum' should not be added. Returned value should be empty" select="()"/>
    </x:scenario>

    <x:scenario label="that points to an element *not in* the xref.elements.pagenum.in.class list (XREF already has class value)">
      <x:context select="//h:a[@data-type='xref'][@id='sidebar_xref']">
	<x:param name="xref.elements.pagenum.in.class">chapter
sect1
	</x:param>
	<x:param name="xref.target" select="//*[@id='sidebar']"/>
      </x:context>
      <x:expect label="Class value of 'pagenum' *should not* be added. Class value preserved as is">underline</x:expect>
    </x:scenario>

  </x:scenario>

  <x:scenario label="When calling whitespace-only-in-text on an empty text node">
    <x:call template="whitespace-only-in-text">
      <x:param name="text.content" select="''"/>
    </x:call>
    <x:expect label="It should return 'true'">1</x:expect>
  </x:scenario>

  <x:scenario label="When calling whitespace-only-in-text on a single space character">
    <x:call template="whitespace-only-in-text">
      <x:param name="text.content" select="' '"/>
    </x:call>
    <x:expect label="It should return 'true'">1</x:expect>
  </x:scenario>

  <x:scenario label="When calling whitespace-only-in-text on an nbsp character">
    <x:call template="whitespace-only-in-text">
      <x:param name="text.content" select="'&#xa0;'"/>
    </x:call>
    <x:expect label="It should return 'true'">1</x:expect>
  </x:scenario>

  <x:scenario label="When calling whitespace-only-in-text on a word character">
    <x:call template="whitespace-only-in-text">
      <x:param name="text.content" select="'b'"/>
    </x:call>
    <x:expect label="It should return 'false'">0</x:expect>
  </x:scenario>

  <x:scenario label="When calling whitespace-only-in-text on a mix of whitespace character">
    <x:call template="whitespace-only-in-text">
      <x:param name="text.content" select="' &#xa0;  '"/>
    </x:call>
    <x:expect label="It should return 'true'">1</x:expect>
  </x:scenario>

  <x:scenario label="When calling whitespace-only-in-text on a mix of whitespace character (2)">
    <x:call template="whitespace-only-in-text">
      <x:param name="text.content" select="'    '"/>
    </x:call>
    <x:expect label="It should return 'true'">1</x:expect>
  </x:scenario>

  <x:scenario label="When calling whitespace-only-in-text on a mix of whitespace character (3)">
    <x:call template="whitespace-only-in-text">
      <x:param name="text.content" select="'&#xa0;&#xa0;&#xa0;'"/>
    </x:call>
    <x:expect label="It should return 'true'">1</x:expect>
  </x:scenario>

  <x:scenario label="When calling whitespace-only-in-text on a mix of word characters">
    <x:call template="whitespace-only-in-text">
      <x:param name="text.content" select="'chocolatechipcookies'"/>
    </x:call>
    <x:expect label="It should return 'false'">0</x:expect>
  </x:scenario>

  <x:scenario label="When calling whitespace-only-in-text on a mix of word and whitespace characters">
    <x:call template="whitespace-only-in-text">
      <x:param name="text.content" select="'chocolate chip cookies'"/>
    </x:call>
    <x:expect label="It should return 'false'">0</x:expect>
  </x:scenario>

  <x:scenario label="When calling whitespace-only-in-text on a mix of word and whitespace characters (2)">
    <x:call template="whitespace-only-in-text">
      <x:param name="text.content" select="'chocolate&#xa0;chip cookies'"/>
    </x:call>
    <x:expect label="It should return 'false'">0</x:expect>
  </x:scenario>

  <!-- Table column calculations -->

  <x:scenario label="When matching a table with a colgroup">
    <x:context mode="number.of.table.columns">
      <table>
	<colgroup span="2"/>
	<tbody>
	  <tr>
	    <td>First</td>
	    <td>Second</td>
	  </tr>
	  <tr>
	    <td>Third</td>
	    <td>Fourth</td>
	  </tr>
	</tbody>
      </table>
    </x:context>
    <!-- check the result -->
    <x:expect label="The colgroup span should be returned as the number of columns">2</x:expect>
  </x:scenario>

  <x:scenario label="When matching a table with a colgroup">
    <x:context mode="number.of.table.columns">
      <table>
	<colgroup span="5"/>
	<tbody>
	  <tr>
	    <td>First</td>
	    <td>Second</td>
	  </tr>
	  <tr>
	    <td>Third</td>
	    <td>Fourth</td>
	  </tr>
	</tbody>
      </table>
    </x:context>
    <!-- check the result -->
    <x:expect label="The colgroup span should be returned as the number of columns, even if it doesn't reflect table accurately">5</x:expect>
  </x:scenario>

  <x:scenario label="When matching a table with a tbody (no colgroup)">
    <x:context mode="number.of.table.columns">
      <table>
	<thead>
	  <tr>
	    <th>First</th>
	    <th>Second</th>
	    <!-- Intentionally mismatching thead columns with tbody columns -->
	  </tr>
	</thead>
	<tbody>
	  <tr>
	    <td>One</td>
	    <td>Two</td>
	    <td>Three</td>
	  </tr>
	  <tr>
	    <td>Quatre</td>
	    <td>Cinq</td>
	    <td>Six</td>
	  </tr>
	</tbody>
      </table>
    </x:context>
    <x:expect label="The correct number of columns should be inferred">3</x:expect>
  </x:scenario>

  <x:scenario label="When matching a table with a tbody (nonstandard colgroup should be ignored)">
    <x:context mode="number.of.table.columns">
      <table>
	<colgroup>
	  <col/>
	</colgroup>
	<thead>
	  <tr>
	    <th>First</th>
	    <th>Second</th>
	    <!-- Intentionally mismatching thead columns with tbody columns -->
	  </tr>
	</thead>
	<tbody>
	  <tr>
	    <td>One</td>
	    <td>Two</td>
	    <td>Three</td>
	  </tr>
	  <tr>
	    <td>Quatre</td>
	    <td>Cinq</td>
	    <td>Six</td>
	  </tr>
	</tbody>
      </table>
    </x:context>
    <x:expect label="The correct number of columns should be inferred">3</x:expect>
  </x:scenario>

  <x:scenario label="When matching a table with a tbody (nonstandard colgroups should be ignored)">
    <x:context mode="number.of.table.columns">
      <table>
	<colgroup span="2"/>
	<colgroup span="4"/>
	<thead>
	  <tr>
	    <th>First</th>
	    <th>Second</th>
	    <!-- Intentionally mismatching thead columns with tbody columns -->
	  </tr>
	</thead>
	<tbody>
	  <tr>
	    <td>One</td>
	    <td>Two</td>
	    <td>Three</td>
	  </tr>
	  <tr>
	    <td>Quatre</td>
	    <td>Cinq</td>
	    <td>Six</td>
	  </tr>
	</tbody>
      </table>
    </x:context>
    <x:expect label="The correct number of columns should be inferred">3</x:expect>
  </x:scenario>
  
  <x:scenario label="When matching a table without a tbody">
    <x:context mode="number.of.table.columns">
      <table>
	<tr>
	  <td>One</td>
	  <td>Two</td>
	  <td>Three</td>
	  <td>Four</td>
	</tr>
	<tr>
	  <td>Quatre</td>
	  <td>Cinq</td>
	  <td>Six</td>
	  <td>Sept</td>
	</tr>
      </table>
    </x:context>
    <x:expect label="The correct number of columns should be inferred">4</x:expect>
  </x:scenario>

  <x:scenario label="When matching a table without a tbody (nonstandard colgroup should be ignored)">
    <x:context mode="number.of.table.columns">
      <table>
	<colgroup>
	  <col/>
	</colgroup>
	<tr>
	  <td>One</td>
	  <td>Two</td>
	  <td>Three</td>
	  <td>Four</td>
	</tr>
	<tr>
	  <td>Quatre</td>
	  <td>Cinq</td>
	  <td>Six</td>
	  <td>Sept</td>
	</tr>
      </table>
    </x:context>
    <x:expect label="The correct number of columns should be inferred">4</x:expect>
  </x:scenario>

  <x:scenario label="When matching a table without a tbody (nonstandard colgroups should be ignored)">
    <x:context mode="number.of.table.columns">
      <table>
	<colgroup span="3"/>
	<colgroup span="9"/>
	<colgroup span="6"/>
	<tr>
	  <td>One</td>
	  <td>Two</td>
	  <td>Three</td>
	  <td>Four</td>
	</tr>
	<tr>
	  <td>Quatre</td>
	  <td>Cinq</td>
	  <td>Six</td>
	  <td>Sept</td>
	</tr>
      </table>
    </x:context>
    <x:expect label="The correct number of columns should be inferred">4</x:expect>
  </x:scenario>

</x:description>
